* TODO 엑셀 파일 다루기 2: 그래프 그리기

#+BEGIN_SRC ipython :session :exports none
  %matplotlib inline

  import matplotlib
  import matplotlib.pyplot as plt
  import matplotlib.font_manager as fm

  matplotlib.rc('font', family='Noto Sans CJK KR')
#+END_SRC

#+RESULTS:

#+BEGIN_SRC ipython :session :exports none
  %matplotlib inline
  from tabulate import tabulate

  def tab(df):
      print(tabulate(df, headers='keys', tablefmt='orgtbl'))
#+END_SRC

여기서는 그래프 그리기에 중점을 두고 살펴봅시다.

복잡한 데이터를 다루기 전에, 우선 그래프를 그리기 위한 가장 최소한의 형태를 살펴보겠습니다.

#+BEGIN_SRC ipython :session :results raw :exports both :ipyfile outputs/excel-2-bar-chart.png
  import pandas as pd
  series = pd.Series([1, 2, 3, 4, 5])
  series.plot.bar();
#+end_SRC

#+RESULTS:
[[file:outputs/excel-2-bar-chart.png]]


#+BEGIN_SRC ipython :session :results raw :exports both :ipyfile outputs/excel-2-barh-chart.png
  import pandas as pd
  series = pd.Series([1, 2, 3, 4, 5])
  series.plot.barh();
#+end_SRC

#+RESULTS:
[[file:outputs/excel-2-barh-chart.png]]

#+BEGIN_SRC ipython :session :results raw :exports both :ipyfile outputs/excel-2-line-chart.png
  import pandas as pd
  series = pd.Series([1, 2, 3, 4, 5])
  series.plot.line();
#+end_SRC

#+RESULTS:
[[file:outputs/excel-2-line-chart.png]]

#+BEGIN_SRC ipython :session :results raw :exports both :ipyfile outputs/excel-2-area-chart.png
  import pandas as pd
  series = pd.Series([1, 2, 3, 4, 5])
  series.plot.area();
#+end_SRC

#+RESULTS:
[[file:outputs/excel-2-area-chart.png]]


#+BEGIN_SRC ipython :session :results raw :exports both :ipyfile outputs/excel-2-pie-chart.png
  import pandas as pd
  series = pd.Series([1, 2, 3, 4, 5])
  series.plot.pie();
#+end_SRC

#+RESULTS:
[[file:outputs/excel-2-pie-chart.png]]

여러 개의 계열이 있는 경우에는 어떻게 할까요?

#+BEGIN_SRC ipython :session :results raw :exports both :ipyfile outputs/excel-2-dataframe-bar-chart.png
  import pandas as pd
  df = pd.DataFrame([[1, 3, 5, 7, 9], [2, 3, 3, 4, 5]])
  df.plot.bar();
#+END_SRC

#+RESULTS:
[[file:outputs/excel-2-dataframe-bar-chart.png]]


이제 실제 데이터에 대해 그래프를 그려봅시다.

#+BEGIN_SRC ipython :session :exports code :results raw
  import pandas as pd
  df_dtype = pd.read_excel('outputs/실습생_컬럼추가.xlsx', sheet_name='Sheet1',
                           index_col=0,
                           dtype={'번호': 'object', '성별': 'object', '즐기는 음식': 'object', '비만도': 'object', '연령대': 'object'})
  df_dtype
#+END_SRC


막대그래프를 그려볼까요?

#+BEGIN_SRC ipython :session :exports both :results raw :ipyfile outputs/excel-2-data-bar-chart.png
  df_dtype['신장(cm)'].plot.bar();
#+END_SRC

#+RESULTS:
[[file:outputs/excel-2-data-bar-chart.png]]

키가 기본적으로 100cm 이상이라서, 잘 구별되지 않습니다. y축의 기준을 변경해봅시다.

#+BEGIN_SRC ipython :session :exports both :results raw :ipyfile outputs/excel-2-data-bar-chart-ylim.png
  axes = df_dtype['신장(cm)'].plot.bar()
  axes.set_ylim((150, 190))
  plt.show()
#+END_SRC

#+RESULTS:
[[file:outputs/excel-2-data-bar-chart-ylim.png]]

이번에는 빈도에 대한 그래프를 그려봅시다. 우선 비만도에 대한 빈도를 구해봅시다.

#+BEGIN_SRC ipython :session :exports both :results raw
  df_fat_freq = pd.pivot_table(df_dtype, index='비만도', aggfunc='size')
  df_fat_freq
#+END_SRC

#+RESULTS:
#+BEGIN_EXAMPLE
비만도
  경도 비만     3
  과체중      13
  정상        4
  dtype: int64
#+END_EXAMPLE

이 빈도에 대해 그래프를 그려봅시다.

#+BEGIN_SRC ipython :session :exports both :results raw :ipyfile outputs/excel-2-data-pivot-bar-chart.png
  import matplotlib.font_manager as fm
  matplotlib.rc('font', family='Noto Sans CJK KR')

  df_fat_freq.plot.bar();
#+END_SRC

#+RESULTS:
[[file:outputs/excel-2-data-pivot-bar-chart.png]]

빈도 순으로 정렬해서 그려봅시다.

#+BEGIN_SRC ipython :session :exports both :results raw :ipyfile outputs/excel-2-data-pivot-bar-chart-sorted.png
  import matplotlib.font_manager as fm
  matplotlib.rc('font', family='Noto Sans CJK KR')

  df_fat_freq.sort_values(ascending=False).plot.bar();
#+END_SRC

#+RESULTS:
[[file:outputs/excel-2-data-pivot-bar-chart-sorted.png]]
